# -*- coding: utf-8 -*-
"""IA con librerias.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uD9Innhpbs_tiOm1N2sV0jsmGa0o0c1Q
"""

from google.colab import drive
drive.mount('/content/drive')
ruta = "/content/drive/MyDrive/high_popularity_spotify_data.csv"  #para leer del drive

def leer_csv(ruta):
    import pandas as pd
    df = pd.read_csv(ruta)
    print(f"✔ CSV cargado correctamente: {ruta}")
    print(f"→ Filas: {df.shape[0]}, Columnas: {df.shape[1]}")
    return df

def escribir_csv(df, ruta):
    df.to_csv(ruta, index=False)
    print(f" CSV guardado en: {ruta}")

def eliminar_columnas(df, columnas_a_eliminar):
    df = df.drop(columns=columnas_a_eliminar)
    print(f" Columnas eliminadas: {columnas_a_eliminar}")
    return df

def rellenar_nulos(df):
    for columna, cantidad in df.isnull().sum().items():
        if cantidad > 0:
            print(f"{columna}: {cantidad} valores nulos")

            if df[columna].dtype == 'object' or df[columna].dtype.name == 'string':
                df[columna] = df[columna].fillna('Desconocido')
                print(f"-- Rellenado con 'Desconocido'")

            elif pd.api.types.is_numeric_dtype(df[columna]):
                media = df[columna].mean()
                df[columna] = df[columna].fillna(media)
                print(f"-- Rellenado con la media: {media:.2f}")

            else:
                print("-- Tipo de dato no manejado directamente.")
    return df

def codificar_categorias(df):
    return pd.get_dummies(df)

def normalizar_numericos(df):
    from sklearn.preprocessing import MinMaxScaler

    scaler = MinMaxScaler()
    columnas_numericas = df.select_dtypes(include='number').columns
    df[columnas_numericas] = scaler.fit_transform(df[columnas_numericas])
    print(f"--Datos normalizados usando Min-Max en columnas: {list(columnas_numericas)}")
    return df

def dividir_dataset(df, fraccion_train, fraccion_val):
    from sklearn.model_selection import train_test_split

    df_train_val, df_test = train_test_split(df, train_size=fraccion_train + fraccion_val)
    proporcion_val = fraccion_val / (fraccion_train + fraccion_val)
    df_train, df_val = train_test_split(df_train_val, train_size=1 - proporcion_val)

    print(f" Dataset dividido:")
    print(f"-- Entrenamiento: {len(df_train)} filas")
    print(f"-- Validación: {len(df_val)} filas")
    print(f"-- Prueba: {len(df_test)} filas")

    return df_train, df_val, df_test

df = leer_csv(ruta)
df = rellenar_nulos(df)
df = codificar_categorias(df)
df = normalizar_numericos(df)
df_train, df_val, df_test =dividir_dataset(df, 0.7, 0.15)
escribir_csv(df_train, "df_train.csv")
escribir_csv(df_val, "df_val.csv")
escribir_csv(df_test, "df_test.csv")

from google.colab import files # descargar los archivos en la pc
files.download("df_train.csv")
files.download("df_val.csv")
files.download("df_test.csv")